@use "sass:string";

// font weight
$thin:    100;
$light:   300;
$normal:  400;
$medium:  500;
$bold:    600;

// if font spath last character was not ending with (/) then add (/) to end of the path
@function debug-fonts-path($path){

  $path: string.unquote($path);

  $last-character: string.slice($path, -1);
  @if $last-character != "/"{
    $path: string.unquote($path + "/");
  }

  $path: string.quote($path);

  @return $path;
  
}


@function return-font-text-weight-base-on-number-weight($fontWeight){

  $return: null;

  @if $fontWeight == $thin {
    $return: "thin";
  } @else if $fontWeight == $light  {
    $return: "light";
  } @else if $fontWeight == $normal {
    $return: null;
  } @else if $fontWeight == $medium {
    $return: medium;
  } @else if $fontWeight == $bold   {
    $return: bold;
  }

  @if $return != null {
    $return: "-#{$return}";
  }

  @return $return;
}



@mixin fontface($font-family, $font-weight, $suffix, $path) {

  $text-weight: return-font-text-weight-base-on-number-weight($font-weight);
  $path: debug-fonts-path($path);

  @font-face {
    font-family: $font-family;
    font-weight: $font-weight;
    src: url("#{$path}#{$font-family}/#{$font-family}#{$text-weight}.#{$suffix}") format("#{$suffix}");
    font-style: normal;
  }
}